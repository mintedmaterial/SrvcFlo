{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)240_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)240_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)551_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:26",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)637_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)701_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2294_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2294_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)2294_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC4906.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Arrays.sol:Arrays",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol:ERC1155Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:23"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:25"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155.sol:12",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Burnable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(address,uint256,uint256)",
          "burnBatch(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:23"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:25"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol:ERC1155Pausable": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Pausable.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:23"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:25"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:28"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:22",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Arrays.sol:Arrays"
        ],
        "methods": [
          "totalSupply(uint256)",
          "totalSupply()",
          "exists(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:23"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:25"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:28"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:25"
            },
            {
              "label": "_totalSupplyAll",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol:ERC1155Utils": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\utils\\ERC1155Utils.sol:16",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721Burnable.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\utils\\ERC721Utils.sol:16",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)6875_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:28"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6875_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)6875_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)6875_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Arrays.sol:Arrays": {
        "src": "@openzeppelin\\contracts\\utils\\Arrays.sol:15",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/SlotDerivation.sol:SlotDerivation",
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Comparators.sol:Comparators",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Comparators.sol:Comparators": {
        "src": "@openzeppelin\\contracts\\utils\\Comparators.sol:11",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin\\contracts\\utils\\Panic.sol:26",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/SlotDerivation.sol:SlotDerivation": {
        "src": "@openzeppelin\\contracts\\utils\\SlotDerivation.sol:41",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:13",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:12",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeCast.sol:19",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:11",
        "version": {
          "withMetadata": "03b488c098dd3175e6708204b6b4d959a85d97010614f30a858f034bd0410613",
          "withoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568",
          "linkedWithoutMetadata": "ef51aca7aca5d0718cb96883d326646a1b17e1d1087661f068995ef31477e568"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/ERC7857VerifiableINFT.sol:ERC7857VerifiableINFT": {
        "src": "Contracts\\ERC7857VerifiableINFT.sol:21",
        "version": {
          "withMetadata": "f8d83fb2db41ad2c22741fff82e7887b5e31bf639ebbea22457f5367c6912fab",
          "withoutMetadata": "a4bd42b6769c755da215f65f868d49df064852d3e4b76071479b0a51fb0ff0c0",
          "linkedWithoutMetadata": "a4bd42b6769c755da215f65f868d49df064852d3e4b76071479b0a51fb0ff0c0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string)",
          "mintVerifiableINFT(address,string,bytes32,bytes32)",
          "verifyMetadata(uint256,bytes)",
          "updateMetadata(uint256,string,bytes32,bytes)",
          "updateAgentLearning(uint256,bytes32,bytes32,bytes32)",
          "initiateSecureTransfer(uint256,address,bytes)",
          "completeSecureTransfer(uint256,string,bytes32)",
          "getVerifiableMetadata(uint256)",
          "getAgentLearningData(uint256)",
          "getPendingTransfer(uint256)",
          "setAuthorizedVerifier(address,bool)",
          "setVerificationEndpoint(string)",
          "pause()",
          "unpause()",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)",
          "emergencyWithdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC7857VerifiableINFT",
            "src": "Contracts\\ERC7857VerifiableINFT.sol:86"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_nextTokenId",
            "src": "Contracts\\ERC7857VerifiableINFT.sol:69"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_tokenMetadata",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(VerifiableMetadata)13965_storage)",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFT.sol:62"
            },
            {
              "label": "_agentLearning",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_struct(AgentLearningData)13980_storage)",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFT.sol:63"
            },
            {
              "label": "_pendingTransfers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_struct(TransferVerification)13993_storage)",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFT.sol:64"
            },
            {
              "label": "authorizedVerifiers",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFT.sol:65"
            },
            {
              "label": "usedProofs",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFT.sol:66"
            },
            {
              "label": "_nextTokenId",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFT.sol:69"
            },
            {
              "label": "verificationEndpoint",
              "offset": 0,
              "slot": "16",
              "type": "t_string_storage",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFT.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(AgentLearningData)13980_storage)": {
              "label": "mapping(uint256 => struct ERC7857VerifiableINFT.AgentLearningData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TransferVerification)13993_storage)": {
              "label": "mapping(uint256 => struct ERC7857VerifiableINFT.TransferVerification)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(VerifiableMetadata)13965_storage)": {
              "label": "mapping(uint256 => struct ERC7857VerifiableINFT.VerifiableMetadata)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AgentLearningData)13980_storage": {
              "label": "struct ERC7857VerifiableINFT.AgentLearningData",
              "members": [
                {
                  "label": "learningHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "skillsHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "preferencesHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "learningVersion",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "interactions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lastLearningUpdate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(TransferVerification)13993_storage": {
              "label": "struct ERC7857VerifiableINFT.TransferVerification",
              "members": [
                {
                  "label": "transferHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "from",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "to",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isCompleted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "encryptionKeyHash",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(VerifiableMetadata)13965_storage": {
              "label": "struct ERC7857VerifiableINFT.VerifiableMetadata",
              "members": [
                {
                  "label": "contentHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proofHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "encryptedURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "version",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastUpdate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isVerified",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "lastVerifier",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/ERC7857VerifiableINFTTestnet.sol:ERC7857VerifiableINFT": {
        "src": "Contracts\\ERC7857VerifiableINFTTestnet.sol:16",
        "version": {
          "withMetadata": "f94c0acceb683c40b5f963fc2689e244e4355019ddfd7a4bcaa82a2ae02faca0",
          "withoutMetadata": "88eb6218be9aeefdeeda992d956d7f298b6c1daf8c1e31ceb66e3a4cb18a1993",
          "linkedWithoutMetadata": "88eb6218be9aeefdeeda992d956d7f298b6c1daf8c1e31ceb66e3a4cb18a1993"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address,string,string)",
          "mintVerifiableINFT(address,string,bytes32,uint256,string)",
          "verifyMetadata(uint256,bytes32)",
          "updateMetadata(uint256,string,bytes32)",
          "initiateSecureTransfer(address,address,uint256,string)",
          "completeSecureTransfer(bytes32)",
          "getINFTMetadata(uint256)",
          "getOwnerTokens(address)",
          "verifyOwnership(uint256,bytes32)",
          "pause()",
          "unpause()",
          "setINFTPackagesContract(address)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_inftMetadata",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(INFTMetadata)14954_storage)",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFTTestnet.sol:55"
            },
            {
              "label": "_secureTransfers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(SecureTransfer)14969_storage)",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFTTestnet.sol:56"
            },
            {
              "label": "_ownerTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFTTestnet.sol:57"
            },
            {
              "label": "_tokenIndex",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFTTestnet.sol:58"
            },
            {
              "label": "_nextTokenId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFTTestnet.sol:60"
            },
            {
              "label": "inftPackagesContract",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "ERC7857VerifiableINFT",
              "src": "Contracts\\ERC7857VerifiableINFTTestnet.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)240_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)551_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)637_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)701_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(SecureTransfer)14969_storage)": {
              "label": "mapping(bytes32 => struct ERC7857VerifiableINFT.SecureTransfer)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(INFTMetadata)14954_storage)": {
              "label": "mapping(uint256 => struct ERC7857VerifiableINFT.INFTMetadata)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(INFTMetadata)14954_storage": {
              "label": "struct ERC7857VerifiableINFT.INFTMetadata",
              "members": [
                {
                  "label": "encryptedMetadataHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proofHash",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageTokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lastVerified",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isVerified",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "contentType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(SecureTransfer)14969_storage": {
              "label": "struct ERC7857VerifiableINFT.SecureTransfer",
              "members": [
                {
                  "label": "from",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "to",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "transferId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "initiatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isCompleted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "reencryptedMetadataHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:26",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/GeneratedArtNFT.sol:GeneratedArtNFT": {
        "src": "Contracts\\GeneratedArtNFT.sol:46",
        "version": {
          "withMetadata": "fc47b98c95f132cdc8061c1290d058097ec570d32d1dd5465b091502b244f5ec",
          "withoutMetadata": "2f0eccdbd4c490ab206912cbc0c129a375bd12a3f04f0e047265d15f1eead7d2",
          "linkedWithoutMetadata": "2f0eccdbd4c490ab206912cbc0c129a375bd12a3f04f0e047265d15f1eead7d2"
        },
        "inherit": [
          "Contracts/GeneratedArtNFT.sol:Ownable",
          "Contracts/GeneratedArtNFT.sol:IERC721",
          "Contracts/GeneratedArtNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setAuthorizedMinter(address,bool)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "setTokenURI(uint256,string)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "mintGeneratedArt(address,string,string,string,string,string)",
          "mintBatchGeneratedArt(address,string[],string[],string[],string[],string[])",
          "totalSupply()",
          "getGenerationData(uint256)",
          "tokensOfOwner(address)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "Contracts\\GeneratedArtNFT.sol:55"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "Contracts\\GeneratedArtNFT.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\GeneratedArtNFT.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:48"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:49"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:50"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:51"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:54"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:55"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:56"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:59"
            },
            {
              "label": "tokenGenerationData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(GenerationData)16066_storage)",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:72"
            },
            {
              "label": "authorizedMinters",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GeneratedArtNFT",
              "src": "Contracts\\GeneratedArtNFT.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(GenerationData)16066_storage)": {
              "label": "mapping(uint256 => struct GeneratedArtNFT.GenerationData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(GenerationData)16066_storage": {
              "label": "struct GeneratedArtNFT.GenerationData",
              "members": [
                {
                  "label": "prompt",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "imageData",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "model",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "paymentMethod",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "transactionHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/GeneratedArtNFT.sol:IERC165": {
        "src": "Contracts\\GeneratedArtNFT.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/GeneratedArtNFT.sol:IERC721": {
        "src": "Contracts\\GeneratedArtNFT.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/GeneratedArtNFT.sol:IERC721Receiver": {
        "src": "Contracts\\GeneratedArtNFT.sol:424",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/GeneratedArtNFT.sol:Ownable": {
        "src": "Contracts\\GeneratedArtNFT.sol:26",
        "version": {
          "withMetadata": "6a6cdfa66fe5a70bd15dbf306a61a5893ef196ed5156d328bf9db8fc95ec18d3",
          "withoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9",
          "linkedWithoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "Contracts\\GeneratedArtNFT.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\GeneratedArtNFT.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystem.sol:IERC20": {
        "src": "Contracts\\SonicCreditSystem.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystem.sol:IERC721": {
        "src": "Contracts\\SonicCreditSystem.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "safeMint(address,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystem.sol:ISonicPriceOracle": {
        "src": "Contracts\\SonicCreditSystem.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenAmountForUSD(address,uint256)",
          "getTokenPriceUSD(address)",
          "isTokenSupported(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystem.sol:Ownable": {
        "src": "Contracts\\SonicCreditSystem.sol:21",
        "version": {
          "withMetadata": "6a6cdfa66fe5a70bd15dbf306a61a5893ef196ed5156d328bf9db8fc95ec18d3",
          "withoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9",
          "linkedWithoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "Contracts\\SonicCreditSystem.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicCreditSystem.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystem.sol:SonicCreditSystem": {
        "src": "Contracts\\SonicCreditSystem.sol:47",
        "version": {
          "withMetadata": "c3da081a969e1517c5d7c4123edbf501e9ef4f538947723aa1dcb5f4c996eae9",
          "withoutMetadata": "af61a220b6c7f558e7f81dc0423112526fbc3983d8d1211ad08b834786bec420",
          "linkedWithoutMetadata": "af61a220b6c7f558e7f81dc0423112526fbc3983d8d1211ad08b834786bec420"
        },
        "inherit": [
          "Contracts/SonicCreditSystem.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "purchaseCreditsWithUSDC(uint256)",
          "purchaseCreditsWithWS(uint256)",
          "spendCredits(address,uint256,string)",
          "mintNFTWithSSStt(uint256,string)",
          "mintNFTWithUSDC(uint256,string)",
          "mintNFTWithWS(uint256,string)",
          "addCreditsToUser(address,uint256)",
          "updateCreditPackage(uint256,uint256,uint256,uint256,uint256,bool)",
          "setAddresses(address,address,address)",
          "setPriceOracle(address)",
          "setLeaderboard(address[3],bool)",
          "completeGeneration(uint256,address,string)",
          "getUserCredits(address)",
          "getUserStats(address)",
          "getCreditPackage(uint256)",
          "getCreditPackageWithUSDValue(uint256)",
          "getWSTokenAmountForNFT()",
          "getCurrentWSTokenPrice()",
          "emergencyWithdraw(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicCreditSystem",
            "src": "Contracts\\SonicCreditSystem.sol:102"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicCreditSystem.sol:22"
            },
            {
              "label": "nftContract",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC721)17388",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:54"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ISonicPriceOracle)17412",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:57"
            },
            {
              "label": "srvcfloStaking",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:60"
            },
            {
              "label": "devWallet",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:61"
            },
            {
              "label": "leaderboardWinners",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)3_storage",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:62"
            },
            {
              "label": "leaderboardThresholdMet",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:63"
            },
            {
              "label": "creditPackages",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(CreditPackage)17529_storage)",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:81"
            },
            {
              "label": "userCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:84"
            },
            {
              "label": "totalGenerations",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:92"
            },
            {
              "label": "userGenerations",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:93"
            },
            {
              "label": "currentGenerationId",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SonicCreditSystem",
              "src": "Contracts\\SonicCreditSystem.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)3_storage": {
              "label": "address[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC721)17388": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(ISonicPriceOracle)17412": {
              "label": "contract ISonicPriceOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CreditPackage)17529_storage)": {
              "label": "mapping(uint256 => struct SonicCreditSystem.CreditPackage)",
              "numberOfBytes": "32"
            },
            "t_struct(CreditPackage)17529_storage": {
              "label": "struct SonicCreditSystem.CreditPackage",
              "members": [
                {
                  "label": "usdcPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdValueForWS",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usdcCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wsCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystemWithOracle.sol:IERC20": {
        "src": "Contracts\\SonicCreditSystemWithOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystemWithOracle.sol:IERC721": {
        "src": "Contracts\\SonicCreditSystemWithOracle.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "safeMint(address,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystemWithOracle.sol:ISonicPriceOracle": {
        "src": "Contracts\\SonicCreditSystemWithOracle.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenAmountForUSD(address,uint256)",
          "getTokenPriceUSD(address)",
          "isTokenSupported(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystemWithOracle.sol:Ownable": {
        "src": "Contracts\\SonicCreditSystemWithOracle.sol:21",
        "version": {
          "withMetadata": "6a6cdfa66fe5a70bd15dbf306a61a5893ef196ed5156d328bf9db8fc95ec18d3",
          "withoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9",
          "linkedWithoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "Contracts\\SonicCreditSystemWithOracle.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicCreditSystemWithOracle.sol:SonicCreditSystemWithOracle": {
        "src": "Contracts\\SonicCreditSystemWithOracle.sol:47",
        "version": {
          "withMetadata": "98f70111a8a1fb56fde216b9162d94704f03e7f29786b97f4dab3c7ec8cd0cdc",
          "withoutMetadata": "db0f8fa90e8e2aa4bf3dac478593a77609c4d36fb1a1d9b0b5ede895b8f0e99f",
          "linkedWithoutMetadata": "db0f8fa90e8e2aa4bf3dac478593a77609c4d36fb1a1d9b0b5ede895b8f0e99f"
        },
        "inherit": [
          "Contracts/SonicCreditSystemWithOracle.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "purchaseCreditsWithUSDC(uint256)",
          "purchaseCreditsWithWS(uint256)",
          "spendCredits(address,uint256,string)",
          "mintNFTWithSSStt(uint256,string)",
          "mintNFTWithUSDC(uint256,string)",
          "mintNFTWithWS(uint256,string)",
          "addCreditsToUser(address,uint256)",
          "updateCreditPackage(uint256,uint256,uint256,uint256,uint256,bool)",
          "setAddresses(address,address,address)",
          "setPriceOracle(address)",
          "setLeaderboard(address[3],bool)",
          "completeGeneration(uint256,address,string)",
          "getUserCredits(address)",
          "getUserStats(address)",
          "getCreditPackage(uint256)",
          "getCreditPackageWithUSDValue(uint256)",
          "getWSTokenAmountForNFT()",
          "getCurrentWSTokenPrice()",
          "getOracleInfo()",
          "emergencyWithdraw(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicCreditSystemWithOracle",
            "src": "Contracts\\SonicCreditSystemWithOracle.sol:104"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:22"
            },
            {
              "label": "nftContract",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC721)18729",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:54"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ISonicPriceOracle)18753",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:57"
            },
            {
              "label": "srvcfloStaking",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:61"
            },
            {
              "label": "devWallet",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:62"
            },
            {
              "label": "leaderboardWinners",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)3_storage",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:63"
            },
            {
              "label": "leaderboardThresholdMet",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:64"
            },
            {
              "label": "creditPackages",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(CreditPackage)18873_storage)",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:82"
            },
            {
              "label": "userCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:85"
            },
            {
              "label": "totalGenerations",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:93"
            },
            {
              "label": "userGenerations",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:94"
            },
            {
              "label": "currentGenerationId",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SonicCreditSystemWithOracle",
              "src": "Contracts\\SonicCreditSystemWithOracle.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)3_storage": {
              "label": "address[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC721)18729": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_contract(ISonicPriceOracle)18753": {
              "label": "contract ISonicPriceOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CreditPackage)18873_storage)": {
              "label": "mapping(uint256 => struct SonicCreditSystemWithOracle.CreditPackage)",
              "numberOfBytes": "32"
            },
            "t_struct(CreditPackage)18873_storage": {
              "label": "struct SonicCreditSystemWithOracle.CreditPackage",
              "members": [
                {
                  "label": "usdcPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdValueForWS",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usdcCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "wsCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicMainnetPayment.sol:SonicMainnetPayment": {
        "src": "Contracts\\SonicMainnetPayment.sol:13",
        "version": {
          "withMetadata": "9c62807fabc010096417a0ca0b074c9adfceb7ac02ca18c7144e6f83c45f2e7a",
          "withoutMetadata": "11db6b579d61fbb1f25517e717738d34e9566a90ff7ba2fc2ba33606531c9fff",
          "linkedWithoutMetadata": "11db6b579d61fbb1f25517e717738d34e9566a90ff7ba2fc2ba33606531c9fff"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address,address,address)",
          "purchaseCreditsWithUSDC(uint256)",
          "purchaseCreditsWithWS(uint256,uint256)",
          "updatePackage(uint256,uint256,uint256,uint256,bool)",
          "emergencyWithdraw(address,uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicMainnetPayment",
            "src": "Contracts\\SonicMainnetPayment.sol:49"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDC",
            "src": "Contracts\\SonicMainnetPayment.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WS_TOKEN",
            "src": "Contracts\\SonicMainnetPayment.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "creditsNFT",
            "src": "Contracts\\SonicMainnetPayment.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stakingContract",
            "src": "Contracts\\SonicMainnetPayment.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "devWallet",
            "src": "Contracts\\SonicMainnetPayment.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "creditPackages",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CreditPackage)20195_storage)",
              "contract": "SonicMainnetPayment",
              "src": "Contracts\\SonicMainnetPayment.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(CreditPackage)20195_storage)": {
              "label": "mapping(uint256 => struct SonicMainnetPayment.CreditPackage)",
              "numberOfBytes": "32"
            },
            "t_struct(CreditPackage)20195_storage": {
              "label": "struct SonicMainnetPayment.CreditPackage",
              "members": [
                {
                  "label": "usdcPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdcCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "wsCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicMainnetPaymentV2.sol:SonicMainnetPaymentV2": {
        "src": "Contracts\\SonicMainnetPaymentV2.sol:15",
        "version": {
          "withMetadata": "1f361358ac0989f7819f87c3159d75fe3049e44632fc34e2682980cf710c4be1",
          "withoutMetadata": "8ae0c89d46918deb18ffed52de3396f5139836a91367a3e306aa189bdbc273c3",
          "linkedWithoutMetadata": "8ae0c89d46918deb18ffed52de3396f5139836a91367a3e306aa189bdbc273c3"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address payable,address,address)",
          "purchaseCreditsWithUSDC(uint256)",
          "purchaseCreditsWithSonic(uint256)",
          "spendERC20Credits(address,uint256,string)",
          "spendNFTCredits(address,uint256,uint256,string)",
          "getUserNFTCredits(address,uint256)",
          "updatePackage(uint256,uint256,uint256,uint256,uint256,bool)",
          "transferERC20Credits(address,address,uint256)",
          "giftERC20Credits(address,uint256,string)",
          "giftNFTCredits(address,uint256,uint256,string)",
          "bulkGiftERC20Credits(address[],uint256,string)",
          "emergencyWithdraw(address,uint256)",
          "pause()",
          "unpause()",
          "getUserAvailableNFTCredits(address,uint256)",
          "getUserTotalCredits(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicMainnetPaymentV2",
            "src": "Contracts\\SonicMainnetPaymentV2.sol:68"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDC",
            "src": "Contracts\\SonicMainnetPaymentV2.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "creditsNFT",
            "src": "Contracts\\SonicMainnetPaymentV2.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stakingContract",
            "src": "Contracts\\SonicMainnetPaymentV2.sol:21"
          },
          {
            "kind": "state-variable-immutable",
            "name": "devWallet",
            "src": "Contracts\\SonicMainnetPaymentV2.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "userCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicMainnetPaymentV2",
              "src": "Contracts\\SonicMainnetPaymentV2.sol:25"
            },
            {
              "label": "userNFTCreditsSpent",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SonicMainnetPaymentV2",
              "src": "Contracts\\SonicMainnetPaymentV2.sol:26"
            },
            {
              "label": "creditPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(CreditPackage)20750_storage)",
              "contract": "SonicMainnetPaymentV2",
              "src": "Contracts\\SonicMainnetPaymentV2.sol:37"
            },
            {
              "label": "totalGenerations",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SonicMainnetPaymentV2",
              "src": "Contracts\\SonicMainnetPaymentV2.sol:40"
            },
            {
              "label": "currentGenerationId",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SonicMainnetPaymentV2",
              "src": "Contracts\\SonicMainnetPaymentV2.sol:41"
            },
            {
              "label": "userGenerations",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicMainnetPaymentV2",
              "src": "Contracts\\SonicMainnetPaymentV2.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CreditPackage)20750_storage)": {
              "label": "mapping(uint256 => struct SonicMainnetPaymentV2.CreditPackage)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(CreditPackage)20750_storage": {
              "label": "struct SonicMainnetPaymentV2.CreditPackage",
              "members": [
                {
                  "label": "usdcPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sonicPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usdcCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "sonicCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicMainnetPaymentWithOracle.sol:IBeefyOracle": {
        "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:20",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getFreshPrice(address)",
          "getPrice(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicMainnetPaymentWithOracle.sol:IERC20": {
        "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicMainnetPaymentWithOracle.sol:SonicMainnetPaymentWithOracle": {
        "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:31",
        "version": {
          "withMetadata": "cc83015f5222ccd1974bf4f54c11e8d6c38fedf37e03c01b2119ff9810061727",
          "withoutMetadata": "6d4653f8a7e96ab7f9c8ac7b2dba8b992ea482f0285a020d4196fb45c605484c",
          "linkedWithoutMetadata": "6d4653f8a7e96ab7f9c8ac7b2dba8b992ea482f0285a020d4196fb45c605484c"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address payable,address,address)",
          "purchaseCreditsWithUSDC(uint256)",
          "purchaseCreditsWithSonic(uint256)",
          "spendERC20Credits(address,uint256,string)",
          "spendNFTCredits(address,uint256,uint256,string)",
          "getUserNFTCredits(address,uint256)",
          "updatePackage(uint256,uint256,uint256,uint256,uint256,bool)",
          "giveawayERC20Credits(address[],uint256)",
          "giveawayNFTCredits(address,uint256,uint256)",
          "pause()",
          "unpause()",
          "emergencyWithdraw()",
          "emergencyWithdrawERC20(address,uint256)",
          "getUserAvailableNFTCredits(address,uint256)",
          "getUserTotalCredits(address)",
          "getRequiredSTokensForPackage(uint256)",
          "getPackageWithDynamicPricing(uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicMainnetPaymentWithOracle",
            "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:71"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDC",
            "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "creditsNFT",
            "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:35"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stakingContract",
            "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "devWallet",
            "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "userCredits",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicMainnetPaymentWithOracle",
              "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:46"
            },
            {
              "label": "userNFTCreditsSpent",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SonicMainnetPaymentWithOracle",
              "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:47"
            },
            {
              "label": "creditPackages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(CreditPackage)21931_storage)",
              "contract": "SonicMainnetPaymentWithOracle",
              "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:58"
            },
            {
              "label": "totalGenerations",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SonicMainnetPaymentWithOracle",
              "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:61"
            },
            {
              "label": "currentGenerationId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SonicMainnetPaymentWithOracle",
              "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:62"
            },
            {
              "label": "userGenerations",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicMainnetPaymentWithOracle",
              "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CreditPackage)21931_storage)": {
              "label": "mapping(uint256 => struct SonicMainnetPaymentWithOracle.CreditPackage)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(CreditPackage)21931_storage": {
              "label": "struct SonicMainnetPaymentWithOracle.CreditPackage",
              "members": [
                {
                  "label": "usdcPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdValueForS",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usdcCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "sonicCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicMainnetPaymentWithOracle.sol:SrvcfloCreditsNFTWithRoyalties": {
        "src": "Contracts\\SonicMainnetPaymentWithOracle.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,uint256,bytes)",
          "balanceOf(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicOraclePayment.sol:IBeefyOracle": {
        "src": "Contracts\\SonicOraclePayment.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicOraclePayment.sol:IERC20": {
        "src": "Contracts\\SonicOraclePayment.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "balanceOf(address)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicOraclePayment.sol:SonicOraclePayment": {
        "src": "Contracts\\SonicOraclePayment.sol:29",
        "version": {
          "withMetadata": "89a5675c59af9828de38fe48129ee18680686a0aa36e94faf18dfd635112f22c",
          "withoutMetadata": "9a4f89811abc30dde4a591522193b1e5c266446dc6585136697022eb5437e5c9",
          "linkedWithoutMetadata": "9a4f89811abc30dde4a591522193b1e5c266446dc6585136697022eb5437e5c9"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "purchaseCreditsWithUSDC(uint256)",
          "purchaseCreditsWithSonic(uint256)",
          "getRequiredSTokensForPackage(uint256)",
          "getPackageWithDynamicPricing(uint256)",
          "getUserTotalCredits(address)",
          "pause()",
          "unpause()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicOraclePayment",
            "src": "Contracts\\SonicOraclePayment.sol:69"
          },
          {
            "kind": "state-variable-immutable",
            "name": "USDC",
            "src": "Contracts\\SonicOraclePayment.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "creditsNFT",
            "src": "Contracts\\SonicOraclePayment.sol:33"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stakingContract",
            "src": "Contracts\\SonicOraclePayment.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "devWallet",
            "src": "Contracts\\SonicOraclePayment.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "userCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicOraclePayment",
              "src": "Contracts\\SonicOraclePayment.sol:44"
            },
            {
              "label": "userNFTCreditsSpent",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "SonicOraclePayment",
              "src": "Contracts\\SonicOraclePayment.sol:45"
            },
            {
              "label": "creditPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(CreditPackage)23112_storage)",
              "contract": "SonicOraclePayment",
              "src": "Contracts\\SonicOraclePayment.sol:56"
            },
            {
              "label": "totalGenerations",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SonicOraclePayment",
              "src": "Contracts\\SonicOraclePayment.sol:59"
            },
            {
              "label": "currentGenerationId",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SonicOraclePayment",
              "src": "Contracts\\SonicOraclePayment.sol:60"
            },
            {
              "label": "userGenerations",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicOraclePayment",
              "src": "Contracts\\SonicOraclePayment.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CreditPackage)23112_storage)": {
              "label": "mapping(uint256 => struct SonicOraclePayment.CreditPackage)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(CreditPackage)23112_storage": {
              "label": "struct SonicOraclePayment.CreditPackage",
              "members": [
                {
                  "label": "usdcPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdValueForS",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usdcCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "sonicCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicOraclePayment.sol:SrvcfloCreditsNFTWithRoyalties": {
        "src": "Contracts\\SonicOraclePayment.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256,uint256,bytes)",
          "balanceOf(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPayment.sol:IERC20": {
        "src": "Contracts\\SonicPayment.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPayment.sol:IPriceOracle": {
        "src": "Contracts\\SonicPayment.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenAmountForUSD(address,uint256)",
          "isTokenSupported(address)",
          "getTokenPriceUSD(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPayment.sol:Ownable": {
        "src": "Contracts\\SonicPayment.sol:20",
        "version": {
          "withMetadata": "6a6cdfa66fe5a70bd15dbf306a61a5893ef196ed5156d328bf9db8fc95ec18d3",
          "withoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9",
          "linkedWithoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "Contracts\\SonicPayment.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicPayment.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPayment.sol:SonicAIGenerationPayment": {
        "src": "Contracts\\SonicPayment.sol:40",
        "version": {
          "withMetadata": "2066310c792b34a02119d32356ee0a043fea9f713f63436a2167cbcdc9776c5f",
          "withoutMetadata": "762dfe14431e67f35f57c9c3e596983babad18f28dcdf44ee2dbcba8f9f623c8",
          "linkedWithoutMetadata": "762dfe14431e67f35f57c9c3e596983babad18f28dcdf44ee2dbcba8f9f623c8"
        },
        "inherit": [
          "Contracts/SonicPayment.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "registerMe()",
          "(address,address,address)",
          "setAddresses(address,address)",
          "setPriceOracle(address)",
          "setLeaderboard(address[3],bool)",
          "payWithS(string,string)",
          "payWithUSDC(string,string)",
          "addCredits(address,uint256)",
          "useCredits(string,string)",
          "completeGeneration(uint256,address,string)",
          "emergencyWithdraw(address,uint256)",
          "getUserStats(address)",
          "getContractBalance(address)",
          "getPaymentCosts(string)",
          "getServicePricing()",
          "isOracleActive()",
          "getTokenPriceUSD(address)",
          "getSupportedTokens()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicAIGenerationPayment",
            "src": "Contracts\\SonicPayment.sol:88"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicPayment.sol:21"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPriceOracle)23882",
              "contract": "SonicAIGenerationPayment",
              "src": "Contracts\\SonicPayment.sol:46"
            },
            {
              "label": "banditKidzStaking",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SonicAIGenerationPayment",
              "src": "Contracts\\SonicPayment.sol:57"
            },
            {
              "label": "devWallet",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SonicAIGenerationPayment",
              "src": "Contracts\\SonicPayment.sol:58"
            },
            {
              "label": "leaderboardWinners",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)3_storage",
              "contract": "SonicAIGenerationPayment",
              "src": "Contracts\\SonicPayment.sol:67"
            },
            {
              "label": "leaderboardThresholdMet",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "SonicAIGenerationPayment",
              "src": "Contracts\\SonicPayment.sol:68"
            },
            {
              "label": "totalGenerations",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SonicAIGenerationPayment",
              "src": "Contracts\\SonicPayment.sol:71"
            },
            {
              "label": "userGenerations",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicAIGenerationPayment",
              "src": "Contracts\\SonicPayment.sol:72"
            },
            {
              "label": "userCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicAIGenerationPayment",
              "src": "Contracts\\SonicPayment.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)3_storage": {
              "label": "address[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)23882": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPaymentTestnet.sol:IERC20": {
        "src": "Contracts\\SonicPaymentTestnet.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPaymentTestnet.sol:IPriceOracle": {
        "src": "Contracts\\SonicPaymentTestnet.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenAmountForUSD(address,uint256)",
          "isTokenSupported(address)",
          "getTokenPriceUSD(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPaymentTestnet.sol:Ownable": {
        "src": "Contracts\\SonicPaymentTestnet.sol:20",
        "version": {
          "withMetadata": "6a6cdfa66fe5a70bd15dbf306a61a5893ef196ed5156d328bf9db8fc95ec18d3",
          "withoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9",
          "linkedWithoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "Contracts\\SonicPaymentTestnet.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicPaymentTestnet.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPaymentTestnet.sol:SonicPaymentTestnet": {
        "src": "Contracts\\SonicPaymentTestnet.sol:40",
        "version": {
          "withMetadata": "9a0d578f6a75068b375f0005232065728ae57ce13707f104daf0a266d7c15447",
          "withoutMetadata": "da0a46ccbc89bb94833ea90211f6f93cf40ee9580976222587d30f4b4c844856",
          "linkedWithoutMetadata": "da0a46ccbc89bb94833ea90211f6f93cf40ee9580976222587d30f4b4c844856"
        },
        "inherit": [
          "Contracts/SonicPaymentTestnet.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "setCoralToken(address)",
          "setPriceOracle(address)",
          "setAddresses(address,address)",
          "setLeaderboard(address[3],bool)",
          "payWithSSStt(string,string)",
          "payWithCORAL(string,string)",
          "payWithS(string,string)",
          "payWithUSDC(string,string)",
          "useCredits(string,string)",
          "addCredits(address,uint256)",
          "completeGeneration(uint256,address,string)",
          "emergencyWithdraw(address,uint256)",
          "getUserStats(address)",
          "getContractBalance(address)",
          "getSupportedTokens()",
          "getPaymentCosts(string)",
          "getServicePricing()",
          "isOracleActive()",
          "getTokenPriceUSD(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicPaymentTestnet",
            "src": "Contracts\\SonicPaymentTestnet.sol:88"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicPaymentTestnet.sol:21"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)24888",
              "contract": "SonicPaymentTestnet",
              "src": "Contracts\\SonicPaymentTestnet.sol:47"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPriceOracle)24912",
              "contract": "SonicPaymentTestnet",
              "src": "Contracts\\SonicPaymentTestnet.sol:50"
            },
            {
              "label": "srvcfloStaking",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SonicPaymentTestnet",
              "src": "Contracts\\SonicPaymentTestnet.sol:63"
            },
            {
              "label": "devWallet",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SonicPaymentTestnet",
              "src": "Contracts\\SonicPaymentTestnet.sol:64"
            },
            {
              "label": "leaderboardWinners",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)3_storage",
              "contract": "SonicPaymentTestnet",
              "src": "Contracts\\SonicPaymentTestnet.sol:73"
            },
            {
              "label": "leaderboardThresholdMet",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "SonicPaymentTestnet",
              "src": "Contracts\\SonicPaymentTestnet.sol:74"
            },
            {
              "label": "totalGenerations",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SonicPaymentTestnet",
              "src": "Contracts\\SonicPaymentTestnet.sol:77"
            },
            {
              "label": "userGenerations",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicPaymentTestnet",
              "src": "Contracts\\SonicPaymentTestnet.sol:78"
            },
            {
              "label": "userCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicPaymentTestnet",
              "src": "Contracts\\SonicPaymentTestnet.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)3_storage": {
              "label": "address[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)24888": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)24912": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPaymentTestnetWithNFT.sol:IERC20": {
        "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "transfer(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPaymentTestnetWithNFT.sol:IGeneratedArtNFT": {
        "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintGeneratedArt(address,string,string,string,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPaymentTestnetWithNFT.sol:Ownable": {
        "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:25",
        "version": {
          "withMetadata": "6a6cdfa66fe5a70bd15dbf306a61a5893ef196ed5156d328bf9db8fc95ec18d3",
          "withoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9",
          "linkedWithoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPaymentTestnetWithNFT.sol:SonicPaymentTestnetWithNFT": {
        "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:45",
        "version": {
          "withMetadata": "a6714248e2becdbd6b44064d5772776444cbb08e41b01c4f6a5504527ec1e28a",
          "withoutMetadata": "7a53bc043969bbd51ebcd9ebdfe2e36ea34f46136c81c46ee36632683a1a80cd",
          "linkedWithoutMetadata": "7a53bc043969bbd51ebcd9ebdfe2e36ea34f46136c81c46ee36632683a1a80cd"
        },
        "inherit": [
          "Contracts/SonicPaymentTestnetWithNFT.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "setCoralToken(address)",
          "setNFTContract(address)",
          "setAddresses(address,address)",
          "setLeaderboard(address[3],bool)",
          "payWithSSStt(string,string)",
          "payWithSSSttAndMintNFT(string,string,string,string)",
          "payWithCORAL(string,string)",
          "payWithCORALAndMintNFT(string,string,string,string)",
          "payWithS(string,string)",
          "payWithSAndMintNFT(string,string,string,string)",
          "payWithUSDC(string,string)",
          "payWithUSDCAndMintNFT(string,string,string,string)",
          "useCredits(string,string)",
          "addCredits(address,uint256)",
          "completeGeneration(uint256,address,string)",
          "emergencyWithdraw(address,uint256)",
          "getUserStats(address)",
          "getContractBalance(address)",
          "getSupportedTokens()",
          "getPaymentCosts()",
          "getNFTContract()",
          "getNFTStats()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicPaymentTestnetWithNFT",
            "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:101"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:26"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)26155",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:52"
            },
            {
              "label": "nftContract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IGeneratedArtNFT)26173",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:55"
            },
            {
              "label": "banditKidzStaking",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:70"
            },
            {
              "label": "devWallet",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:71"
            },
            {
              "label": "leaderboardWinners",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)3_storage",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:80"
            },
            {
              "label": "leaderboardThresholdMet",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:81"
            },
            {
              "label": "totalGenerations",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:84"
            },
            {
              "label": "userGenerations",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:85"
            },
            {
              "label": "userCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:86"
            },
            {
              "label": "userNFTsMinted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:89"
            },
            {
              "label": "totalNFTsMinted",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SonicPaymentTestnetWithNFT",
              "src": "Contracts\\SonicPaymentTestnetWithNFT.sol:90"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)3_storage": {
              "label": "address[3]",
              "numberOfBytes": "96"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)26155": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IGeneratedArtNFT)26173": {
              "label": "contract IGeneratedArtNFT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPriceOracle.sol:IERC20": {
        "src": "Contracts\\SonicPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "symbol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SonicPriceOracle.sol:SonicPriceOracle": {
        "src": "Contracts\\SonicPriceOracle.sol:9",
        "version": {
          "withMetadata": "67104c8c87e82c8bce366de9b8863a0c5eeacee30ff9b5157b70c7798682a77b",
          "withoutMetadata": "2acdb2a8e89a44793cffe89f5218aa512b8fdccf867c403355bef5349a41b566",
          "linkedWithoutMetadata": "2acdb2a8e89a44793cffe89f5218aa512b8fdccf867c403355bef5349a41b566"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address)",
          "addPriceUpdater(address)",
          "removePriceUpdater(address)",
          "addSupportedToken(address)",
          "removeSupportedToken(address)",
          "updatePrice(address,uint256)",
          "updatePrices(address[],uint256[])",
          "getTokenAmountForUSD(address,uint256)",
          "getTokenPriceUSD(address)",
          "isTokenSupported(address)",
          "isPriceStale(address)",
          "getTokenInfo(address)",
          "getAllTokens()",
          "emergencyUpdatePrice(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SonicPriceOracle",
            "src": "Contracts\\SonicPriceOracle.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "SonicPriceOracle",
              "src": "Contracts\\SonicPriceOracle.sol:10"
            },
            {
              "label": "priceUpdaters",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SonicPriceOracle",
              "src": "Contracts\\SonicPriceOracle.sol:13"
            },
            {
              "label": "tokenPricesUSD",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicPriceOracle",
              "src": "Contracts\\SonicPriceOracle.sol:16"
            },
            {
              "label": "lastUpdated",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SonicPriceOracle",
              "src": "Contracts\\SonicPriceOracle.sol:17"
            },
            {
              "label": "supportedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SonicPriceOracle",
              "src": "Contracts\\SonicPriceOracle.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcFLoAICollection.sol:SrvcFLoAICollection": {
        "src": "Contracts\\SrvcFLoAICollection.sol:12",
        "version": {
          "withMetadata": "1de3b592828bc70d97e8b2ded2a7049c0c477b52e3ebd8d47e3bbb6e7a928617",
          "withoutMetadata": "986aca85b14a213f11f564e2bc9581a4eaa4c3703346d9d4720583e52a345a04",
          "linkedWithoutMetadata": "986aca85b14a213f11f564e2bc9581a4eaa4c3703346d9d4720583e52a345a04"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol:ERC1155Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setURI(string)",
          "pause()",
          "unpause()",
          "mint(address,uint256,uint256,bytes)",
          "mintCustomCredits(address,uint256,bytes)",
          "mintBatch(address,uint256[],uint256[],bytes)",
          "getCreditAmount(uint256)",
          "useCredits(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcFLoAICollection",
            "src": "Contracts\\SrvcFLoAICollection.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:23"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:25"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:28"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:25"
            },
            {
              "label": "_totalSupplyAll",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:26"
            },
            {
              "label": "creditAmounts",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SrvcFLoAICollection",
              "src": "Contracts\\SrvcFLoAICollection.sol:21"
            },
            {
              "label": "userCustomCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SrvcFLoAICollection",
              "src": "Contracts\\SrvcFLoAICollection.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloCreditsNFT.sol:ISrvcfloStaking": {
        "src": "Contracts\\SrvcfloCreditsNFT.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "distributeRewards(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloCreditsNFT.sol:SrvcfloCreditsNFT": {
        "src": "Contracts\\SrvcfloCreditsNFT.sol:18",
        "version": {
          "withMetadata": "8ae8f478d0d804f6f3811ec45135e5a4aa3e69c2be790a0f7b63783a920e7398",
          "withoutMetadata": "0d638403a809e95a0ea5e3180a8c9ed50460019f1f45862c80be4b01770fcf36",
          "linkedWithoutMetadata": "0d638403a809e95a0ea5e3180a8c9ed50460019f1f45862c80be4b01770fcf36"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "purchaseCreditsWithUSDC(uint256)",
          "purchaseCreditsWithWS(uint256)",
          "purchaseCreditsWithSSStt(uint256)",
          "spendCreditsForGeneration(address,uint256,string,bool,string)",
          "mintGenerationNFT(uint256,string)",
          "addCollectionInfluence(string,string)",
          "detectCollectionInfluence(string)",
          "setAddresses(address,address)",
          "setLeaderboard(address[3],bool)",
          "setURI(string)",
          "getUserCreditBalance(address)",
          "getUserGenerations(address)",
          "getSupportedCollections()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcfloCreditsNFT",
            "src": "Contracts\\SrvcfloCreditsNFT.sol:76"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentGenerationId",
            "src": "Contracts\\SrvcfloCreditsNFT.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:23"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:25"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:28"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:25"
            },
            {
              "label": "_totalSupplyAll",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:26"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "srvcfloStaking",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:33"
            },
            {
              "label": "devWallet",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:34"
            },
            {
              "label": "leaderboardWinners",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)3_storage",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:35"
            },
            {
              "label": "leaderboardThresholdMet",
              "offset": 0,
              "slot": "12",
              "type": "t_bool",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:36"
            },
            {
              "label": "creditPackages",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_struct(CreditPackage)28639_storage)",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:50"
            },
            {
              "label": "currentGenerationId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:53"
            },
            {
              "label": "generations",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(GenerationInfo)28669_storage)",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:54"
            },
            {
              "label": "userGenerationCount",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:55"
            },
            {
              "label": "collectionKeywords",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:67"
            },
            {
              "label": "supportedCollections",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "SrvcfloCreditsNFT",
              "src": "Contracts\\SrvcfloCreditsNFT.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)3_storage": {
              "label": "address[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CreditPackage)28639_storage)": {
              "label": "mapping(uint256 => struct SrvcfloCreditsNFT.CreditPackage)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(GenerationInfo)28669_storage)": {
              "label": "mapping(uint256 => struct SrvcfloCreditsNFT.GenerationInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CreditPackage)28639_storage": {
              "label": "struct SrvcfloCreditsNFT.CreditPackage",
              "members": [
                {
                  "label": "usdcPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "wsPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sssttPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "usdcCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "wsCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sssttCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(GenerationInfo)28669_storage": {
              "label": "struct SrvcfloCreditsNFT.GenerationInfo",
              "members": [
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "prompt",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "resultUrl",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "influencedCollection",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isVideo",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloCreditsNFTMainnet.sol:SrvcfloCreditsNFTMainnet": {
        "src": "Contracts\\SrvcfloCreditsNFTMainnet.sol:12",
        "version": {
          "withMetadata": "a2e895adc21e45441e1de2b6962a2a6be787519f0e11a808d1ee459c59184389",
          "withoutMetadata": "bf4d3f8a52ec4a59601eb88a464467d87cee2d791daada8ef80aef59947195d8",
          "linkedWithoutMetadata": "bf4d3f8a52ec4a59601eb88a464467d87cee2d791daada8ef80aef59947195d8"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol:ERC1155Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setURI(string)",
          "pause()",
          "unpause()",
          "mint(address,uint256,uint256,bytes)",
          "mintBatch(address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcfloCreditsNFTMainnet",
            "src": "Contracts\\SrvcfloCreditsNFTMainnet.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:23"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:25"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:28"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:25"
            },
            {
              "label": "_totalSupplyAll",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloCreditsNFTWithRoyalties.sol:SrvcfloCreditsNFTWithRoyalties": {
        "src": "Contracts\\SrvcfloCreditsNFTWithRoyalties.sol:16",
        "version": {
          "withMetadata": "be235da25cc5028adf73b7c8c34a8bcba3e93b84d480890b743ff39df5f3ee53",
          "withoutMetadata": "01d2c0ca7792fccce4d4bf09731dfbee2d7bb62b573091b8669c2e8f18806e3e",
          "linkedWithoutMetadata": "01d2c0ca7792fccce4d4bf09731dfbee2d7bb62b573091b8669c2e8f18806e3e"
        },
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol:ERC1155Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "setURI(string)",
          "pause()",
          "unpause()",
          "setAppWallet(address)",
          "mintWithMetadata(address,uint256,uint256,string,string,bytes)",
          "mint(address,uint256,uint256,bytes)",
          "mintBatch(address,uint256[],uint256[],bytes)",
          "royaltyInfo(uint256,uint256)",
          "calculateRoyaltySplit(uint256,uint256)",
          "executeRoyaltySplit(uint256)",
          "getGenerationMetadata(uint256)",
          "supportsInterface(bytes4)",
          "emergencyWithdraw()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcfloCreditsNFTWithRoyalties",
            "src": "Contracts\\SrvcfloCreditsNFTWithRoyalties.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:23"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:25"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:28"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:25"
            },
            {
              "label": "_totalSupplyAll",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:26"
            },
            {
              "label": "appWallet",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SrvcfloCreditsNFTWithRoyalties",
              "src": "Contracts\\SrvcfloCreditsNFTWithRoyalties.sol:25"
            },
            {
              "label": "tokenCreators",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "SrvcfloCreditsNFTWithRoyalties",
              "src": "Contracts\\SrvcfloCreditsNFTWithRoyalties.sol:28"
            },
            {
              "label": "generationPrompts",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "SrvcfloCreditsNFTWithRoyalties",
              "src": "Contracts\\SrvcfloCreditsNFTWithRoyalties.sol:31"
            },
            {
              "label": "generationMethods",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "SrvcfloCreditsNFTWithRoyalties",
              "src": "Contracts\\SrvcfloCreditsNFTWithRoyalties.sol:32"
            },
            {
              "label": "mintTimestamps",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SrvcfloCreditsNFTWithRoyalties",
              "src": "Contracts\\SrvcfloCreditsNFTWithRoyalties.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloGeneratedNFT.sol:SrvcfloGeneratedNFT": {
        "src": "Contracts\\SrvcfloGeneratedNFT.sol:15",
        "version": {
          "withMetadata": "71c5e9f794ced6575e8bb7a7f44b417a7860adb6af7b05af66f2258fc2fc3fc2",
          "withoutMetadata": "71c5e9f794ced6575e8bb7a7f44b417a7860adb6af7b05af66f2258fc2fc3fc2",
          "linkedWithoutMetadata": "71c5e9f794ced6575e8bb7a7f44b417a7860adb6af7b05af66f2258fc2fc3fc2"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
          "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Pausable.sol:ERC1155Pausable",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setAuthorizedMinter(address,bool)",
          "mintGeneration(address,string,string,string,bool,uint256)",
          "mintGenerationBatch(address,string[],string[],string[],bool[],uint256)",
          "updateIPFSHash(uint256,string)",
          "updateIPFSHashBatch(uint256[],string[])",
          "uri(uint256)",
          "setTokenURI(uint256,string)",
          "getGenerationInfo(uint256)",
          "getGenerationsByCreator(address)",
          "getGenerationsByPackage(uint256)",
          "getGenerationsByCollection(string)",
          "setBaseMetadataURI(string)",
          "setURI(string)",
          "pause()",
          "unpause()",
          "setDefaultRoyalty(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "emergencyMint(address,uint256,uint256,bytes)",
          "emergencyWithdraw()",
          "supportsInterface(bytes4)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcfloGeneratedNFT",
            "src": "Contracts\\SrvcfloGeneratedNFT.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_currentTokenId",
            "src": "Contracts\\SrvcfloGeneratedNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMetadataURI",
            "src": "Contracts\\SrvcfloGeneratedNFT.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:23"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:25"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:28"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:25"
            },
            {
              "label": "_totalSupplyAll",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ERC1155Supply",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol:26"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)6875_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:28"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)6875_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:29"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "generations",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(GenerationInfo)30673_storage)",
              "contract": "SrvcfloGeneratedNFT",
              "src": "Contracts\\SrvcfloGeneratedNFT.sol:31"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "SrvcfloGeneratedNFT",
              "src": "Contracts\\SrvcfloGeneratedNFT.sol:32"
            },
            {
              "label": "authorizedMinters",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SrvcfloGeneratedNFT",
              "src": "Contracts\\SrvcfloGeneratedNFT.sol:33"
            },
            {
              "label": "_currentTokenId",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SrvcfloGeneratedNFT",
              "src": "Contracts\\SrvcfloGeneratedNFT.sol:35"
            },
            {
              "label": "baseMetadataURI",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "SrvcfloGeneratedNFT",
              "src": "Contracts\\SrvcfloGeneratedNFT.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(GenerationInfo)30673_storage)": {
              "label": "mapping(uint256 => struct SrvcfloGeneratedNFT.GenerationInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)6875_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(GenerationInfo)30673_storage": {
              "label": "struct SrvcfloGeneratedNFT.GenerationInfo",
              "members": [
                {
                  "label": "prompt",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "influencedCollection",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "packageTokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isVideo",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "aiModel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "generationCost",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(RoyaltyInfo)6875_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloINFTPackages.sol:IPriceOracle": {
        "src": "Contracts\\SrvcfloINFTPackages.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokenAmountForUSD(address,uint256)",
          "getSTokenPriceUSD()",
          "isTokenSupported(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloINFTPackages.sol:ISrvcfloGeneratedNFT": {
        "src": "Contracts\\SrvcfloINFTPackages.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mintGeneration(address,string,string,string,bool,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloINFTPackages.sol:ISrvcfloStaking": {
        "src": "Contracts\\SrvcfloINFTPackages.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "distributeRewards(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloINFTPackages.sol:SrvcfloINFTPackages": {
        "src": "Contracts\\SrvcfloINFTPackages.sol:35",
        "version": {
          "withMetadata": "184b7392b916c205a26f888cb7e8e71e7703712e51707a6683efdb5e9b1e38bf",
          "withoutMetadata": "e06328d938c1920f066454f52b1d73bfdfcb75e864a4e53720cc80db0e889545",
          "linkedWithoutMetadata": "e06328d938c1920f066454f52b1d73bfdfcb75e864a4e53720cc80db0e889545"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "purchasePackageWithUSDC(uint256)",
          "purchasePackageWithWS(uint256)",
          "purchasePackageWithNativeS(uint256)",
          "generateContent(uint256,string,bool,string)",
          "createSubscription(uint256,address,uint256,uint256)",
          "mintDevPackages()",
          "mintSpecificDevPackage(uint256,address)",
          "getPackageInfo(uint256)",
          "getPackagePricing(uint256)",
          "getUserPackages(address)",
          "getSubscriptionInfo(uint256,address)",
          "setContracts(address,address,address)",
          "setLeaderboard(address[3],bool)",
          "updatePackage(uint256,(uint256,uint256,string,string,bool))",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcfloINFTPackages",
            "src": "Contracts\\SrvcfloINFTPackages.sol:104"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_nextTokenId",
            "src": "Contracts\\SrvcfloINFTPackages.sol:95"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "generatedNFTContract",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ISrvcfloGeneratedNFT)31819",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:50"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IPriceOracle)31849",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:51"
            },
            {
              "label": "srvcfloStaking",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:52"
            },
            {
              "label": "devWallet",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:53"
            },
            {
              "label": "leaderboardWinners",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_address)3_storage",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:54"
            },
            {
              "label": "leaderboardThresholdMet",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:55"
            },
            {
              "label": "packages",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_struct(PackageInfo)31911_storage)",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:91"
            },
            {
              "label": "inftPackages",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_struct(INFTPackage)31939_storage)",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:92"
            },
            {
              "label": "authorizations",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(AuthorizedUser)31948_storage))",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:93"
            },
            {
              "label": "_nextTokenId",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:95"
            },
            {
              "label": "totalPackagesSold",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "SrvcfloINFTPackages",
              "src": "Contracts\\SrvcfloINFTPackages.sol:96"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)3_storage": {
              "label": "address[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)31849": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISrvcfloGeneratedNFT)31819": {
              "label": "contract ISrvcfloGeneratedNFT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AuthorizedUser)31948_storage)": {
              "label": "mapping(address => struct SrvcfloINFTPackages.AuthorizedUser)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(AuthorizedUser)31948_storage))": {
              "label": "mapping(uint256 => mapping(address => struct SrvcfloINFTPackages.AuthorizedUser))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(INFTPackage)31939_storage)": {
              "label": "mapping(uint256 => struct SrvcfloINFTPackages.INFTPackage)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PackageInfo)31911_storage)": {
              "label": "mapping(uint256 => struct SrvcfloINFTPackages.PackageInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AuthorizedUser)31948_storage": {
              "label": "struct SrvcfloINFTPackages.AuthorizedUser",
              "members": [
                {
                  "label": "maxCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usedCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "expiresAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(INFTPackage)31939_storage": {
              "label": "struct SrvcfloINFTPackages.INFTPackage",
              "members": [
                {
                  "label": "packageType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usedCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "mintedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "agentMetadata",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "collectionInfluences",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "generatedTokenIds",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "authorizations",
                  "type": "t_mapping(t_address,t_struct(AuthorizedUser)31948_storage)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(PackageInfo)31911_storage": {
              "label": "struct SrvcfloINFTPackages.PackageInfo",
              "members": [
                {
                  "label": "totalCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "usdPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "agentCapabilities",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloINFTPackagesV2.sol:SrvcfloINFTPackagesV2": {
        "src": "Contracts\\SrvcfloINFTPackagesV2.sol:13",
        "version": {
          "withMetadata": "54ca6c5a5bf4d8c36b791ce3e8c2480cd2a41280d03b83f04dc24e6afdcc8c48",
          "withoutMetadata": "b6e10c33d9533385f7c4873390237f9128b15f81399dccc980e8cc75b519e907",
          "linkedWithoutMetadata": "b6e10c33d9533385f7c4873390237f9128b15f81399dccc980e8cc75b519e907"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "purchasePackageWithNativeS(uint256,address)",
          "purchasePackageWithUSDC(uint256,address)",
          "useCredits(uint256,uint256)",
          "updatePackagePriceS(uint256,uint256)",
          "getRemainingCredits(uint256)",
          "getPackageInfo(uint256)",
          "totalSupply()",
          "pause()",
          "unpause()",
          "withdrawNativeS(uint256)",
          "withdrawUSDC(uint256)",
          "updateDevWallet(address)",
          "updateStakingContract(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcfloINFTPackagesV2",
            "src": "Contracts\\SrvcfloINFTPackagesV2.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:28"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:34"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "devWallet",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "SrvcfloINFTPackagesV2",
              "src": "Contracts\\SrvcfloINFTPackagesV2.sol:36"
            },
            {
              "label": "stakingContract",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "SrvcfloINFTPackagesV2",
              "src": "Contracts\\SrvcfloINFTPackagesV2.sol:37"
            },
            {
              "label": "packages",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_struct(PackageInfo)33544_storage)",
              "contract": "SrvcfloINFTPackagesV2",
              "src": "Contracts\\SrvcfloINFTPackagesV2.sol:40"
            },
            {
              "label": "packageCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SrvcfloINFTPackagesV2",
              "src": "Contracts\\SrvcfloINFTPackagesV2.sol:41"
            },
            {
              "label": "packageType",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SrvcfloINFTPackagesV2",
              "src": "Contracts\\SrvcfloINFTPackagesV2.sol:42"
            },
            {
              "label": "_tokenIdCounter",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SrvcfloINFTPackagesV2",
              "src": "Contracts\\SrvcfloINFTPackagesV2.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PackageInfo)33544_storage)": {
              "label": "mapping(uint256 => struct SrvcfloINFTPackagesV2.PackageInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PackageInfo)33544_storage": {
              "label": "struct SrvcfloINFTPackagesV2.PackageInfo",
              "members": [
                {
                  "label": "totalCredits",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceS",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "priceUSDC",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "aiModels",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloMarketplace.sol:ISrvcfloGeneratedNFT": {
        "src": "Contracts\\SrvcfloMarketplace.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getGenerationInfo(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloMarketplace.sol:ISrvcfloINFTPackages": {
        "src": "Contracts\\SrvcfloMarketplace.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPackageInfo(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloMarketplace.sol:SrvcfloMarketplace": {
        "src": "Contracts\\SrvcfloMarketplace.sol:42",
        "version": {
          "withMetadata": "716b1d54a83d6a8372f33d5ffee82a77dd69a585477d61b48b898aac790d4fe4",
          "withoutMetadata": "c635b3beb80f4b5e0179c2791b5b9b9bba6c206a4f5abe038cceac9875c5e00e",
          "linkedWithoutMetadata": "c635b3beb80f4b5e0179c2791b5b9b9bba6c206a4f5abe038cceac9875c5e00e"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address)",
          "listINFTPackage(uint256,uint256,uint8,uint256)",
          "listGeneratedContent(uint256,uint256,uint256,uint8,uint256)",
          "buy(bytes32)",
          "placeBid(bytes32,uint256,uint256)",
          "acceptBid(bytes32,uint256)",
          "cancelListing(bytes32)",
          "createAuction(uint256,uint256,uint8,uint8,uint256,uint256)",
          "bidOnAuction(bytes32,uint256)",
          "endAuction(bytes32)",
          "getBids(bytes32)",
          "getActiveBids(bytes32)",
          "setFeeRecipient(address)",
          "setContracts(address,address)",
          "pause()",
          "unpause()",
          "emergencyWithdraw(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcfloMarketplace",
            "src": "Contracts\\SrvcfloMarketplace.sol:155"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "inftPackagesContract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ISrvcfloINFTPackages)34276",
              "contract": "SrvcfloMarketplace",
              "src": "Contracts\\SrvcfloMarketplace.sol:51"
            },
            {
              "label": "generatedNFTContract",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ISrvcfloGeneratedNFT)34300",
              "contract": "SrvcfloMarketplace",
              "src": "Contracts\\SrvcfloMarketplace.sol:52"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SrvcfloMarketplace",
              "src": "Contracts\\SrvcfloMarketplace.sol:57"
            },
            {
              "label": "listings",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(Listing)34372_storage)",
              "contract": "SrvcfloMarketplace",
              "src": "Contracts\\SrvcfloMarketplace.sol:103"
            },
            {
              "label": "bids",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_array(t_struct(Bid)34386_storage)dyn_storage)",
              "contract": "SrvcfloMarketplace",
              "src": "Contracts\\SrvcfloMarketplace.sol:104"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_struct(Auction)34413_storage)",
              "contract": "SrvcfloMarketplace",
              "src": "Contracts\\SrvcfloMarketplace.sol:105"
            },
            {
              "label": "userListingsCount",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SrvcfloMarketplace",
              "src": "Contracts\\SrvcfloMarketplace.sol:108"
            },
            {
              "label": "userPurchasesCount",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SrvcfloMarketplace",
              "src": "Contracts\\SrvcfloMarketplace.sol:109"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Bid)34386_storage)dyn_storage": {
              "label": "struct SrvcfloMarketplace.Bid[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISrvcfloGeneratedNFT)34300": {
              "label": "contract ISrvcfloGeneratedNFT",
              "numberOfBytes": "20"
            },
            "t_contract(ISrvcfloINFTPackages)34276": {
              "label": "contract ISrvcfloINFTPackages",
              "numberOfBytes": "20"
            },
            "t_enum(ListingType)34346": {
              "label": "enum SrvcfloMarketplace.ListingType",
              "members": [
                "INFT_PACKAGE",
                "GENERATED_CONTENT"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(PaymentToken)34351": {
              "label": "enum SrvcfloMarketplace.PaymentToken",
              "members": [
                "ETH",
                "USDC",
                "WS",
                "SSSTT"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_array(t_struct(Bid)34386_storage)dyn_storage)": {
              "label": "mapping(bytes32 => struct SrvcfloMarketplace.Bid[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Auction)34413_storage)": {
              "label": "mapping(bytes32 => struct SrvcfloMarketplace.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Listing)34372_storage)": {
              "label": "mapping(bytes32 => struct SrvcfloMarketplace.Listing)",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)34413_storage": {
              "label": "struct SrvcfloMarketplace.Auction",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startingPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "currentBid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentBidder",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "paymentToken",
                  "type": "t_enum(PaymentToken)34351",
                  "offset": 20,
                  "slot": "4"
                },
                {
                  "label": "listingType",
                  "type": "t_enum(ListingType)34346",
                  "offset": 21,
                  "slot": "4"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "ended",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(Bid)34386_storage": {
              "label": "struct SrvcfloMarketplace.Bid",
              "members": [
                {
                  "label": "bidder",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "paymentToken",
                  "type": "t_enum(PaymentToken)34351",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "expiresAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Listing)34372_storage": {
              "label": "struct SrvcfloMarketplace.Listing",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "paymentToken",
                  "type": "t_enum(PaymentToken)34351",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "listingType",
                  "type": "t_enum(ListingType)34346",
                  "offset": 1,
                  "slot": "3"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "expiresAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloMultiCollectionStaking.sol:SrvcfloMultiCollectionStaking": {
        "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:19",
        "version": {
          "withMetadata": "6649950acd4e248e331b45fe78913c875b738f6da9c0e49e0e1d706b3ccc4023",
          "withoutMetadata": "6649950acd4e248e331b45fe78913c875b738f6da9c0e49e0e1d706b3ccc4023",
          "linkedWithoutMetadata": "6649950acd4e248e331b45fe78913c875b738f6da9c0e49e0e1d706b3ccc4023"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,address)",
          "addCollection(address,string,uint256)",
          "updateCollection(address,bool,uint256)",
          "removeCollection(address)",
          "stake(address,uint256,uint256)",
          "stakeBatch(address,uint256[],uint256)",
          "unstake(address,uint256)",
          "unstakeBatch(address,uint256[])",
          "addDistribution(uint256,address,address[])",
          "claimRewards(uint256[])",
          "getUserRewardPointsAtDistribution(address,uint256)",
          "getUserStakedTokens(address,address)",
          "getAllUserStakedTokens(address)",
          "isTokenStaked(address,uint256)",
          "getStakeInfo(address,uint256)",
          "getSupportedCollections()",
          "getUserPendingRewards(address)",
          "getDistributionCount()",
          "getLockPeriodsAndBonuses()",
          "toggleStaking()",
          "pause()",
          "unpause()",
          "setPenaltyWallet(address)",
          "emergencyWithdraw(address,uint256,address)",
          "emergencyUnstake(address,uint256)",
          "onERC721Received(address,address,uint256,bytes)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcfloMultiCollectionStaking",
            "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:120"
          },
          {
            "kind": "state-variable-assignment",
            "name": "stakingEnabled",
            "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:97"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2294_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "collections",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(CollectionInfo)36633_storage)",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:81"
            },
            {
              "label": "supportedCollections",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:82"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(StakeInfo)36656_storage)",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:85"
            },
            {
              "label": "userStakedTokensByCollection",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:86"
            },
            {
              "label": "stakedTokenIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:87"
            },
            {
              "label": "distributions",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_struct(Distribution)36673_storage)dyn_storage",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:90"
            },
            {
              "label": "distributionClaimed",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:91"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:94"
            },
            {
              "label": "totalRewardPoints",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:95"
            },
            {
              "label": "currentDistributionId",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:96"
            },
            {
              "label": "stakingEnabled",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:97"
            },
            {
              "label": "penaltyWallet",
              "offset": 1,
              "slot": "13",
              "type": "t_address",
              "contract": "SrvcfloMultiCollectionStaking",
              "src": "Contracts\\SrvcfloMultiCollectionStaking.sol:101"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Distribution)36673_storage)dyn_storage": {
              "label": "struct SrvcfloMultiCollectionStaking.Distribution[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC721)6578": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(address => uint256[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(CollectionInfo)36633_storage)": {
              "label": "mapping(address => struct SrvcfloMultiCollectionStaking.CollectionInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2294_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(StakeInfo)36656_storage)": {
              "label": "mapping(bytes32 => struct SrvcfloMultiCollectionStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CollectionInfo)36633_storage": {
              "label": "struct SrvcfloMultiCollectionStaking.CollectionInfo",
              "members": [
                {
                  "label": "contractAddress",
                  "type": "t_contract(IERC721)6578",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "baseRewardMultiplier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "addedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalStaked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Distribution)36673_storage": {
              "label": "struct SrvcfloMultiCollectionStaking.Distribution",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalStakedAtDistribution",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalRewardPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "distributed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "eligibleCollections",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(RoleData)2294_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(StakeInfo)36656_storage": {
              "label": "struct SrvcfloMultiCollectionStaking.StakeInfo",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "collection",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "stakedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "unstakedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lockPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lockEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "bonusMultiplier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "collectionMultiplier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "totalMultiplier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "earlyUnstake",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "lastClaimedDistribution",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/SrvcfloStaking.sol:SrvcfloStaking": {
        "src": "Contracts\\SrvcfloStaking.sol:19",
        "version": {
          "withMetadata": "70983a8b30fe38a50a724e8fa9292d94d905a3c445ff0af5d3472b505a5bfa55",
          "withoutMetadata": "70983a8b30fe38a50a724e8fa9292d94d905a3c445ff0af5d3472b505a5bfa55",
          "linkedWithoutMetadata": "70983a8b30fe38a50a724e8fa9292d94d905a3c445ff0af5d3472b505a5bfa55"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,address)",
          "stake(uint256,uint256)",
          "stakeBatch(uint256[],uint256)",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "addDistribution(uint256,address)",
          "claimRewards(uint256[])",
          "getUserBonusPointsAtDistribution(address,uint256)",
          "getUserStakedCountAtDistribution(address,uint256)",
          "getUserStakedTokens(address)",
          "isTokenStaked(uint256)",
          "getDistributionCount()",
          "getUserPendingRewards(address)",
          "getLockPeriodsAndBonuses()",
          "getStakeInfo(uint256)",
          "toggleStaking()",
          "pause()",
          "unpause()",
          "setPenaltyWallet(address)",
          "emergencyWithdraw(address,uint256,address)",
          "emergencyUnstake(uint256)",
          "onERC721Received(address,address,uint256,bytes)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SrvcfloStaking",
            "src": "Contracts\\SrvcfloStaking.sol:101"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stakedNFT",
            "src": "Contracts\\SrvcfloStaking.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "stakingEnabled",
            "src": "Contracts\\SrvcfloStaking.sol:81"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)2294_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\utils\\Pausable.sol:18"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(StakeInfo)39389_storage)",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:69"
            },
            {
              "label": "userStakedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:70"
            },
            {
              "label": "stakedTokenIndex",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:71"
            },
            {
              "label": "distributions",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_struct(Distribution)39402_storage)dyn_storage",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:74"
            },
            {
              "label": "distributionClaimed",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:75"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:78"
            },
            {
              "label": "totalBonusPoints",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:79"
            },
            {
              "label": "currentDistributionId",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:80"
            },
            {
              "label": "stakingEnabled",
              "offset": 0,
              "slot": "11",
              "type": "t_bool",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:81"
            },
            {
              "label": "penaltyWallet",
              "offset": 1,
              "slot": "11",
              "type": "t_address",
              "contract": "SrvcfloStaking",
              "src": "Contracts\\SrvcfloStaking.sol:85"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Distribution)39402_storage)dyn_storage": {
              "label": "struct SrvcfloStaking.Distribution[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)2294_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(StakeInfo)39389_storage)": {
              "label": "mapping(uint256 => struct SrvcfloStaking.StakeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Distribution)39402_storage": {
              "label": "struct SrvcfloStaking.Distribution",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalStakedAtDistribution",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalBonusPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "distributed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(RoleData)2294_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(StakeInfo)39389_storage": {
              "label": "struct SrvcfloStaking.StakeInfo",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "unstakedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lockPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lockEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "bonusMultiplier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "earlyUnstake",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastClaimedDistribution",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/TestNFT.sol:IERC165": {
        "src": "Contracts\\TestNFT.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/TestNFT.sol:IERC721": {
        "src": "Contracts\\TestNFT.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/TestNFT.sol:IERC721Receiver": {
        "src": "Contracts\\TestNFT.sol:241",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/TestNFT.sol:Ownable": {
        "src": "Contracts\\TestNFT.sol:26",
        "version": {
          "withMetadata": "6a6cdfa66fe5a70bd15dbf306a61a5893ef196ed5156d328bf9db8fc95ec18d3",
          "withoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9",
          "linkedWithoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "Contracts\\TestNFT.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\TestNFT.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/TestNFT.sol:TestBanditKidzNFT": {
        "src": "Contracts\\TestNFT.sol:46",
        "version": {
          "withMetadata": "85406727378cce01d2d1147f6d20d3956b1e32d68bcd47795dcc14284e8c9886",
          "withoutMetadata": "fb8a714f56626672d9db182ff79dae769b9a626464f92d6c60867dc507bb7dbe",
          "linkedWithoutMetadata": "fb8a714f56626672d9db182ff79dae769b9a626464f92d6c60867dc507bb7dbe"
        },
        "inherit": [
          "Contracts/TestNFT.sol:Ownable",
          "Contracts/TestNFT.sol:IERC721",
          "Contracts/TestNFT.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "mint(address)",
          "mintBatch(address,uint256)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "Contracts\\TestNFT.sol:55"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "Contracts\\TestNFT.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\TestNFT.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "TestBanditKidzNFT",
              "src": "Contracts\\TestNFT.sol:48"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TestBanditKidzNFT",
              "src": "Contracts\\TestNFT.sol:49"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "TestBanditKidzNFT",
              "src": "Contracts\\TestNFT.sol:50"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "TestBanditKidzNFT",
              "src": "Contracts\\TestNFT.sol:51"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TestBanditKidzNFT",
              "src": "Contracts\\TestNFT.sol:54"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "TestBanditKidzNFT",
              "src": "Contracts\\TestNFT.sol:55"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "TestBanditKidzNFT",
              "src": "Contracts\\TestNFT.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/VotingContract.sol:GenerationVotingAndLeaderboard": {
        "src": "Contracts\\VotingContract.sol:35",
        "version": {
          "withMetadata": "31efe2d6bd78e2079d4158e472ba0366bb8cd7c212f90106d89f3680b72c5d3b",
          "withoutMetadata": "7dddc1cf6daf1effa64c432b84ebfb535f1f5072d9240384db4de0b4267d199d",
          "linkedWithoutMetadata": "7dddc1cf6daf1effa64c432b84ebfb535f1f5072d9240384db4de0b4267d199d"
        },
        "inherit": [
          "Contracts/VotingContract.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "submitGeneration(string,address,string,string)",
          "vote(string)",
          "startWeeklyContest(string,uint256)",
          "endWeeklyContest()",
          "canUserVote(address)",
          "getUserVotingPower(address)",
          "getGenerationsByCreator(address)",
          "getActiveGenerations()",
          "getCurrentContest()",
          "setBanditKidzStaking(address)",
          "setVotingMultipliers(uint256,uint256)",
          "toggleGenerationVoting(string,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GenerationVotingAndLeaderboard",
            "src": "Contracts\\VotingContract.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextContestId",
            "src": "Contracts\\VotingContract.sol:89"
          },
          {
            "kind": "state-variable-assignment",
            "name": "votingPowerMultiplier",
            "src": "Contracts\\VotingContract.sol:90"
          },
          {
            "kind": "state-variable-assignment",
            "name": "stakingVotingMultiplier",
            "src": "Contracts\\VotingContract.sol:91"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\VotingContract.sol:16"
            },
            {
              "label": "banditKidzNFT",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC721)42165",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:36"
            },
            {
              "label": "banditKidzStaking",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBanditKidzStaking)42181",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:37"
            },
            {
              "label": "generations",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Generation)42265_storage)",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:76"
            },
            {
              "label": "weeklyContests",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(WeeklyContest)42289_storage)",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:77"
            },
            {
              "label": "hasVoted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:78"
            },
            {
              "label": "userStats",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(UserStats)42302_storage)",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:79"
            },
            {
              "label": "userWeeklyRank",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:80"
            },
            {
              "label": "userGlobalRank",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:81"
            },
            {
              "label": "allGenerationIds",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:84"
            },
            {
              "label": "allContestIds",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:85"
            },
            {
              "label": "currentWeeklyContestId",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:88"
            },
            {
              "label": "nextContestId",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:89"
            },
            {
              "label": "votingPowerMultiplier",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:90"
            },
            {
              "label": "stakingVotingMultiplier",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "GenerationVotingAndLeaderboard",
              "src": "Contracts\\VotingContract.sol:91"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBanditKidzStaking)42181": {
              "label": "contract IBanditKidzStaking",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)42165": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_bool))": {
              "label": "mapping(address => mapping(string => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStats)42302_storage)": {
              "label": "mapping(address => struct GenerationVotingAndLeaderboard.UserStats)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Generation)42265_storage)": {
              "label": "mapping(string => struct GenerationVotingAndLeaderboard.Generation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WeeklyContest)42289_storage)": {
              "label": "mapping(uint256 => struct GenerationVotingAndLeaderboard.WeeklyContest)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Generation)42265_storage": {
              "label": "struct GenerationVotingAndLeaderboard.Generation",
              "members": [
                {
                  "label": "id",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "prompt",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "resultUrl",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "upvotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "6"
                },
                {
                  "label": "weeklyContestId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(UserStats)42302_storage": {
              "label": "struct GenerationVotingAndLeaderboard.UserStats",
              "members": [
                {
                  "label": "totalGenerationsCreated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "totalUpvotesReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalVotesCast",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "leaderboardPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "weeklyPoints",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "canVote",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(WeeklyContest)42289_storage": {
              "label": "struct GenerationVotingAndLeaderboard.WeeklyContest",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "winners",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "totalParticipants",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "participantPoints",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "generationSubmitted",
                  "type": "t_mapping(t_string_memory_ptr,t_bool)",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/VotingContract.sol:IBanditKidzStaking": {
        "src": "Contracts\\VotingContract.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUserStakedTokens(address)",
          "isTokenStaked(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/VotingContract.sol:IERC721": {
        "src": "Contracts\\VotingContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      },
      "Contracts/VotingContract.sol:Ownable": {
        "src": "Contracts\\VotingContract.sol:15",
        "version": {
          "withMetadata": "6a6cdfa66fe5a70bd15dbf306a61a5893ef196ed5156d328bf9db8fc95ec18d3",
          "withoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9",
          "linkedWithoutMetadata": "e1e3fccc89b45b9722889e11b4577f090cafb3dfc841270a27fb1e23ff55ffc9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "Contracts\\VotingContract.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "Contracts\\VotingContract.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.27"
      }
    }
  ]
}